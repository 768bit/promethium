// Code generated by go-swagger; DO NOT EDIT.

package vms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/768bit/promethium/api/models"
)

// GetVMVolumeOKCode is the HTTP code returned for type GetVMVolumeOK
const GetVMVolumeOKCode int = 200

/*GetVMVolumeOK successful operation

swagger:response getVmVolumeOK
*/
type GetVMVolumeOK struct {

	/*
	  In: Body
	*/
	Payload *models.VMVolume `json:"body,omitempty"`
}

// NewGetVMVolumeOK creates GetVMVolumeOK with default headers values
func NewGetVMVolumeOK() *GetVMVolumeOK {

	return &GetVMVolumeOK{}
}

// WithPayload adds the payload to the get Vm volume o k response
func (o *GetVMVolumeOK) WithPayload(payload *models.VMVolume) *GetVMVolumeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Vm volume o k response
func (o *GetVMVolumeOK) SetPayload(payload *models.VMVolume) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVMVolumeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetVMVolumeBadRequestCode is the HTTP code returned for type GetVMVolumeBadRequest
const GetVMVolumeBadRequestCode int = 400

/*GetVMVolumeBadRequest Invalid ID supplied

swagger:response getVmVolumeBadRequest
*/
type GetVMVolumeBadRequest struct {
}

// NewGetVMVolumeBadRequest creates GetVMVolumeBadRequest with default headers values
func NewGetVMVolumeBadRequest() *GetVMVolumeBadRequest {

	return &GetVMVolumeBadRequest{}
}

// WriteResponse to the client
func (o *GetVMVolumeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// GetVMVolumeNotFoundCode is the HTTP code returned for type GetVMVolumeNotFound
const GetVMVolumeNotFoundCode int = 404

/*GetVMVolumeNotFound VM not found

swagger:response getVmVolumeNotFound
*/
type GetVMVolumeNotFound struct {
}

// NewGetVMVolumeNotFound creates GetVMVolumeNotFound with default headers values
func NewGetVMVolumeNotFound() *GetVMVolumeNotFound {

	return &GetVMVolumeNotFound{}
}

// WriteResponse to the client
func (o *GetVMVolumeNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

/*GetVMVolumeDefault unexpected error

swagger:response getVmVolumeDefault
*/
type GetVMVolumeDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetVMVolumeDefault creates GetVMVolumeDefault with default headers values
func NewGetVMVolumeDefault(code int) *GetVMVolumeDefault {
	if code <= 0 {
		code = 500
	}

	return &GetVMVolumeDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get VM volume default response
func (o *GetVMVolumeDefault) WithStatusCode(code int) *GetVMVolumeDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get VM volume default response
func (o *GetVMVolumeDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get VM volume default response
func (o *GetVMVolumeDefault) WithPayload(payload *models.Error) *GetVMVolumeDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get VM volume default response
func (o *GetVMVolumeDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVMVolumeDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
