// Code generated by go-swagger; DO NOT EDIT.

package vms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/768bit/promethium/api/models"
)

// GetVMDiskOKCode is the HTTP code returned for type GetVMDiskOK
const GetVMDiskOKCode int = 200

/*GetVMDiskOK successful operation

swagger:response getVmDiskOK
*/
type GetVMDiskOK struct {

	/*
	  In: Body
	*/
	Payload *models.VMDisk `json:"body,omitempty"`
}

// NewGetVMDiskOK creates GetVMDiskOK with default headers values
func NewGetVMDiskOK() *GetVMDiskOK {

	return &GetVMDiskOK{}
}

// WithPayload adds the payload to the get Vm disk o k response
func (o *GetVMDiskOK) WithPayload(payload *models.VMDisk) *GetVMDiskOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Vm disk o k response
func (o *GetVMDiskOK) SetPayload(payload *models.VMDisk) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVMDiskOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetVMDiskBadRequestCode is the HTTP code returned for type GetVMDiskBadRequest
const GetVMDiskBadRequestCode int = 400

/*GetVMDiskBadRequest Invalid ID supplied

swagger:response getVmDiskBadRequest
*/
type GetVMDiskBadRequest struct {
}

// NewGetVMDiskBadRequest creates GetVMDiskBadRequest with default headers values
func NewGetVMDiskBadRequest() *GetVMDiskBadRequest {

	return &GetVMDiskBadRequest{}
}

// WriteResponse to the client
func (o *GetVMDiskBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// GetVMDiskNotFoundCode is the HTTP code returned for type GetVMDiskNotFound
const GetVMDiskNotFoundCode int = 404

/*GetVMDiskNotFound VM or Disk not found

swagger:response getVmDiskNotFound
*/
type GetVMDiskNotFound struct {
}

// NewGetVMDiskNotFound creates GetVMDiskNotFound with default headers values
func NewGetVMDiskNotFound() *GetVMDiskNotFound {

	return &GetVMDiskNotFound{}
}

// WriteResponse to the client
func (o *GetVMDiskNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

/*GetVMDiskDefault unexpected error

swagger:response getVmDiskDefault
*/
type GetVMDiskDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetVMDiskDefault creates GetVMDiskDefault with default headers values
func NewGetVMDiskDefault(code int) *GetVMDiskDefault {
	if code <= 0 {
		code = 500
	}

	return &GetVMDiskDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get VM disk default response
func (o *GetVMDiskDefault) WithStatusCode(code int) *GetVMDiskDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get VM disk default response
func (o *GetVMDiskDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get VM disk default response
func (o *GetVMDiskDefault) WithPayload(payload *models.Error) *GetVMDiskDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get VM disk default response
func (o *GetVMDiskDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVMDiskDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
