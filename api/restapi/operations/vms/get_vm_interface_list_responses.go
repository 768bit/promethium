// Code generated by go-swagger; DO NOT EDIT.

package vms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/768bit/promethium/api/models"
)

// GetVMInterfaceListOKCode is the HTTP code returned for type GetVMInterfaceListOK
const GetVMInterfaceListOKCode int = 200

/*GetVMInterfaceListOK Array of VM Network Interfaces

swagger:response getVmInterfaceListOK
*/
type GetVMInterfaceListOK struct {

	/*
	  In: Body
	*/
	Payload []*models.MetaDataNetworkInterfaceConfig `json:"body,omitempty"`
}

// NewGetVMInterfaceListOK creates GetVMInterfaceListOK with default headers values
func NewGetVMInterfaceListOK() *GetVMInterfaceListOK {

	return &GetVMInterfaceListOK{}
}

// WithPayload adds the payload to the get Vm interface list o k response
func (o *GetVMInterfaceListOK) WithPayload(payload []*models.MetaDataNetworkInterfaceConfig) *GetVMInterfaceListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Vm interface list o k response
func (o *GetVMInterfaceListOK) SetPayload(payload []*models.MetaDataNetworkInterfaceConfig) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVMInterfaceListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.MetaDataNetworkInterfaceConfig, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*GetVMInterfaceListDefault unexpected error

swagger:response getVmInterfaceListDefault
*/
type GetVMInterfaceListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetVMInterfaceListDefault creates GetVMInterfaceListDefault with default headers values
func NewGetVMInterfaceListDefault(code int) *GetVMInterfaceListDefault {
	if code <= 0 {
		code = 500
	}

	return &GetVMInterfaceListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get VM interface list default response
func (o *GetVMInterfaceListDefault) WithStatusCode(code int) *GetVMInterfaceListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get VM interface list default response
func (o *GetVMInterfaceListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get VM interface list default response
func (o *GetVMInterfaceListDefault) WithPayload(payload *models.Error) *GetVMInterfaceListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get VM interface list default response
func (o *GetVMInterfaceListDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVMInterfaceListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
