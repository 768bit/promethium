// Code generated by go-swagger; DO NOT EDIT.

package vms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/768bit/promethium/api/models"
)

// DeleteVMInterfaceOKCode is the HTTP code returned for type DeleteVMInterfaceOK
const DeleteVMInterfaceOKCode int = 200

/*DeleteVMInterfaceOK successful operation

swagger:response deleteVmInterfaceOK
*/
type DeleteVMInterfaceOK struct {

	/*
	  In: Body
	*/
	Payload *models.Item `json:"body,omitempty"`
}

// NewDeleteVMInterfaceOK creates DeleteVMInterfaceOK with default headers values
func NewDeleteVMInterfaceOK() *DeleteVMInterfaceOK {

	return &DeleteVMInterfaceOK{}
}

// WithPayload adds the payload to the delete Vm interface o k response
func (o *DeleteVMInterfaceOK) WithPayload(payload *models.Item) *DeleteVMInterfaceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete Vm interface o k response
func (o *DeleteVMInterfaceOK) SetPayload(payload *models.Item) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteVMInterfaceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteVMInterfaceBadRequestCode is the HTTP code returned for type DeleteVMInterfaceBadRequest
const DeleteVMInterfaceBadRequestCode int = 400

/*DeleteVMInterfaceBadRequest Invalid ID supplied

swagger:response deleteVmInterfaceBadRequest
*/
type DeleteVMInterfaceBadRequest struct {
}

// NewDeleteVMInterfaceBadRequest creates DeleteVMInterfaceBadRequest with default headers values
func NewDeleteVMInterfaceBadRequest() *DeleteVMInterfaceBadRequest {

	return &DeleteVMInterfaceBadRequest{}
}

// WriteResponse to the client
func (o *DeleteVMInterfaceBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// DeleteVMInterfaceNotFoundCode is the HTTP code returned for type DeleteVMInterfaceNotFound
const DeleteVMInterfaceNotFoundCode int = 404

/*DeleteVMInterfaceNotFound VM not found

swagger:response deleteVmInterfaceNotFound
*/
type DeleteVMInterfaceNotFound struct {
}

// NewDeleteVMInterfaceNotFound creates DeleteVMInterfaceNotFound with default headers values
func NewDeleteVMInterfaceNotFound() *DeleteVMInterfaceNotFound {

	return &DeleteVMInterfaceNotFound{}
}

// WriteResponse to the client
func (o *DeleteVMInterfaceNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

/*DeleteVMInterfaceDefault unexpected error

swagger:response deleteVmInterfaceDefault
*/
type DeleteVMInterfaceDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteVMInterfaceDefault creates DeleteVMInterfaceDefault with default headers values
func NewDeleteVMInterfaceDefault(code int) *DeleteVMInterfaceDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteVMInterfaceDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete VM interface default response
func (o *DeleteVMInterfaceDefault) WithStatusCode(code int) *DeleteVMInterfaceDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete VM interface default response
func (o *DeleteVMInterfaceDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete VM interface default response
func (o *DeleteVMInterfaceDefault) WithPayload(payload *models.Error) *DeleteVMInterfaceDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete VM interface default response
func (o *DeleteVMInterfaceDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteVMInterfaceDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
