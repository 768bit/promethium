// Code generated by go-swagger; DO NOT EDIT.

package vms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/768bit/promethium/api/models"
)

// GetVMListOKCode is the HTTP code returned for type GetVMListOK
const GetVMListOKCode int = 200

/*GetVMListOK Array of VMs

swagger:response getVmListOK
*/
type GetVMListOK struct {

	/*
	  In: Body
	*/
	Payload []*models.VMListItem `json:"body,omitempty"`
}

// NewGetVMListOK creates GetVMListOK with default headers values
func NewGetVMListOK() *GetVMListOK {

	return &GetVMListOK{}
}

// WithPayload adds the payload to the get Vm list o k response
func (o *GetVMListOK) WithPayload(payload []*models.VMListItem) *GetVMListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Vm list o k response
func (o *GetVMListOK) SetPayload(payload []*models.VMListItem) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVMListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.VMListItem, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*GetVMListDefault unexpected error

swagger:response getVmListDefault
*/
type GetVMListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetVMListDefault creates GetVMListDefault with default headers values
func NewGetVMListDefault(code int) *GetVMListDefault {
	if code <= 0 {
		code = 500
	}

	return &GetVMListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get VM list default response
func (o *GetVMListDefault) WithStatusCode(code int) *GetVMListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get VM list default response
func (o *GetVMListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get VM list default response
func (o *GetVMListDefault) WithPayload(payload *models.Error) *GetVMListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get VM list default response
func (o *GetVMListDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVMListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
