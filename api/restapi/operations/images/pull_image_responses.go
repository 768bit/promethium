// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/768bit/promethium/api/models"
)

// PullImageOKCode is the HTTP code returned for type PullImageOK
const PullImageOKCode int = 200

/*PullImageOK successful operation

swagger:response pullImageOK
*/
type PullImageOK struct {

	/*
	  In: Body
	*/
	Payload *models.VM `json:"body,omitempty"`
}

// NewPullImageOK creates PullImageOK with default headers values
func NewPullImageOK() *PullImageOK {

	return &PullImageOK{}
}

// WithPayload adds the payload to the pull image o k response
func (o *PullImageOK) WithPayload(payload *models.VM) *PullImageOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pull image o k response
func (o *PullImageOK) SetPayload(payload *models.VM) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PullImageOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PullImageDefault unexpected error

swagger:response pullImageDefault
*/
type PullImageDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPullImageDefault creates PullImageDefault with default headers values
func NewPullImageDefault(code int) *PullImageDefault {
	if code <= 0 {
		code = 500
	}

	return &PullImageDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the pull image default response
func (o *PullImageDefault) WithStatusCode(code int) *PullImageDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the pull image default response
func (o *PullImageDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the pull image default response
func (o *PullImageDefault) WithPayload(payload *models.Error) *PullImageDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pull image default response
func (o *PullImageDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PullImageDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
