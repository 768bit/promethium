// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetImagesListHandlerFunc turns a function with the right signature into a get images list handler
type GetImagesListHandlerFunc func(GetImagesListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetImagesListHandlerFunc) Handle(params GetImagesListParams) middleware.Responder {
	return fn(params)
}

// GetImagesListHandler interface for that can handle valid get images list params
type GetImagesListHandler interface {
	Handle(GetImagesListParams) middleware.Responder
}

// NewGetImagesList creates a new http.Handler for the get images list operation
func NewGetImagesList(ctx *middleware.Context, handler GetImagesListHandler) *GetImagesList {
	return &GetImagesList{Context: ctx, Handler: handler}
}

/*GetImagesList swagger:route GET /images images getImagesList

Get a list of Images

Returns a list of Images

*/
type GetImagesList struct {
	Context *middleware.Context
	Handler GetImagesListHandler
}

func (o *GetImagesList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetImagesListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
