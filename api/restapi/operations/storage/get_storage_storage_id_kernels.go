// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetStorageStorageIDKernelsHandlerFunc turns a function with the right signature into a get storage storage ID kernels handler
type GetStorageStorageIDKernelsHandlerFunc func(GetStorageStorageIDKernelsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetStorageStorageIDKernelsHandlerFunc) Handle(params GetStorageStorageIDKernelsParams) middleware.Responder {
	return fn(params)
}

// GetStorageStorageIDKernelsHandler interface for that can handle valid get storage storage ID kernels params
type GetStorageStorageIDKernelsHandler interface {
	Handle(GetStorageStorageIDKernelsParams) middleware.Responder
}

// NewGetStorageStorageIDKernels creates a new http.Handler for the get storage storage ID kernels operation
func NewGetStorageStorageIDKernels(ctx *middleware.Context, handler GetStorageStorageIDKernelsHandler) *GetStorageStorageIDKernels {
	return &GetStorageStorageIDKernels{Context: ctx, Handler: handler}
}

/*GetStorageStorageIDKernels swagger:route GET /storage/{storageID}/kernels storage getStorageStorageIdKernels

Get storage item

*/
type GetStorageStorageIDKernels struct {
	Context *middleware.Context
	Handler GetStorageStorageIDKernelsHandler
}

func (o *GetStorageStorageIDKernels) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetStorageStorageIDKernelsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
