// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetStorageStorageIDDisksHandlerFunc turns a function with the right signature into a get storage storage ID disks handler
type GetStorageStorageIDDisksHandlerFunc func(GetStorageStorageIDDisksParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetStorageStorageIDDisksHandlerFunc) Handle(params GetStorageStorageIDDisksParams) middleware.Responder {
	return fn(params)
}

// GetStorageStorageIDDisksHandler interface for that can handle valid get storage storage ID disks params
type GetStorageStorageIDDisksHandler interface {
	Handle(GetStorageStorageIDDisksParams) middleware.Responder
}

// NewGetStorageStorageIDDisks creates a new http.Handler for the get storage storage ID disks operation
func NewGetStorageStorageIDDisks(ctx *middleware.Context, handler GetStorageStorageIDDisksHandler) *GetStorageStorageIDDisks {
	return &GetStorageStorageIDDisks{Context: ctx, Handler: handler}
}

/*GetStorageStorageIDDisks swagger:route GET /storage/{storageID}/disks storage getStorageStorageIdDisks

Get storage item

*/
type GetStorageStorageIDDisks struct {
	Context *middleware.Context
	Handler GetStorageStorageIDDisksHandler
}

func (o *GetStorageStorageIDDisks) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetStorageStorageIDDisksParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
