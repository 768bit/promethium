// Code generated by go-swagger; DO NOT EDIT.

package networking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/768bit/promethium/api/models"
)

// UpdateNetworkReader is a Reader for the UpdateNetwork structure.
type UpdateNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateNetworkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateNetworkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateNetworkOK creates a UpdateNetworkOK with default headers values
func NewUpdateNetworkOK() *UpdateNetworkOK {
	return &UpdateNetworkOK{}
}

/*UpdateNetworkOK handles this case with default header values.

successful operation
*/
type UpdateNetworkOK struct {
	Payload *models.Network
}

func (o *UpdateNetworkOK) Error() string {
	return fmt.Sprintf("[PUT /networking/{networkID}][%d] updateNetworkOK  %+v", 200, o.Payload)
}

func (o *UpdateNetworkOK) GetPayload() *models.Network {
	return o.Payload
}

func (o *UpdateNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Network)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateNetworkBadRequest creates a UpdateNetworkBadRequest with default headers values
func NewUpdateNetworkBadRequest() *UpdateNetworkBadRequest {
	return &UpdateNetworkBadRequest{}
}

/*UpdateNetworkBadRequest handles this case with default header values.

Invalid ID supplied
*/
type UpdateNetworkBadRequest struct {
}

func (o *UpdateNetworkBadRequest) Error() string {
	return fmt.Sprintf("[PUT /networking/{networkID}][%d] updateNetworkBadRequest ", 400)
}

func (o *UpdateNetworkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNetworkNotFound creates a UpdateNetworkNotFound with default headers values
func NewUpdateNetworkNotFound() *UpdateNetworkNotFound {
	return &UpdateNetworkNotFound{}
}

/*UpdateNetworkNotFound handles this case with default header values.

Storage not found
*/
type UpdateNetworkNotFound struct {
}

func (o *UpdateNetworkNotFound) Error() string {
	return fmt.Sprintf("[PUT /networking/{networkID}][%d] updateNetworkNotFound ", 404)
}

func (o *UpdateNetworkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
