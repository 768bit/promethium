// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/768bit/promethium/api/models"
)

// UpdateStorageReader is a Reader for the UpdateStorage structure.
type UpdateStorageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateStorageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateStorageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateStorageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateStorageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateStorageOK creates a UpdateStorageOK with default headers values
func NewUpdateStorageOK() *UpdateStorageOK {
	return &UpdateStorageOK{}
}

/*UpdateStorageOK handles this case with default header values.

successful operation
*/
type UpdateStorageOK struct {
	Payload models.Storage
}

func (o *UpdateStorageOK) Error() string {
	return fmt.Sprintf("[PUT /storage/{storageID}][%d] updateStorageOK  %+v", 200, o.Payload)
}

func (o *UpdateStorageOK) GetPayload() models.Storage {
	return o.Payload
}

func (o *UpdateStorageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStorageBadRequest creates a UpdateStorageBadRequest with default headers values
func NewUpdateStorageBadRequest() *UpdateStorageBadRequest {
	return &UpdateStorageBadRequest{}
}

/*UpdateStorageBadRequest handles this case with default header values.

Invalid ID supplied
*/
type UpdateStorageBadRequest struct {
}

func (o *UpdateStorageBadRequest) Error() string {
	return fmt.Sprintf("[PUT /storage/{storageID}][%d] updateStorageBadRequest ", 400)
}

func (o *UpdateStorageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateStorageNotFound creates a UpdateStorageNotFound with default headers values
func NewUpdateStorageNotFound() *UpdateStorageNotFound {
	return &UpdateStorageNotFound{}
}

/*UpdateStorageNotFound handles this case with default header values.

Storage not found
*/
type UpdateStorageNotFound struct {
}

func (o *UpdateStorageNotFound) Error() string {
	return fmt.Sprintf("[PUT /storage/{storageID}][%d] updateStorageNotFound ", 404)
}

func (o *UpdateStorageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
