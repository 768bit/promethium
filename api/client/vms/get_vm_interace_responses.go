// Code generated by go-swagger; DO NOT EDIT.

package vms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/768bit/promethium/api/models"
)

// GetVMInteraceReader is a Reader for the GetVMInterace structure.
type GetVMInteraceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVMInteraceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVMInteraceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVMInteraceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVMInteraceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetVMInteraceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetVMInteraceOK creates a GetVMInteraceOK with default headers values
func NewGetVMInteraceOK() *GetVMInteraceOK {
	return &GetVMInteraceOK{}
}

/*GetVMInteraceOK handles this case with default header values.

successful operation
*/
type GetVMInteraceOK struct {
	Payload *models.MetaDataNetworkInterfaceConfig
}

func (o *GetVMInteraceOK) Error() string {
	return fmt.Sprintf("[GET /vms/{vmID}/interfaces/{interfaceID}][%d] getVmInteraceOK  %+v", 200, o.Payload)
}

func (o *GetVMInteraceOK) GetPayload() *models.MetaDataNetworkInterfaceConfig {
	return o.Payload
}

func (o *GetVMInteraceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetaDataNetworkInterfaceConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMInteraceBadRequest creates a GetVMInteraceBadRequest with default headers values
func NewGetVMInteraceBadRequest() *GetVMInteraceBadRequest {
	return &GetVMInteraceBadRequest{}
}

/*GetVMInteraceBadRequest handles this case with default header values.

Invalid ID supplied
*/
type GetVMInteraceBadRequest struct {
}

func (o *GetVMInteraceBadRequest) Error() string {
	return fmt.Sprintf("[GET /vms/{vmID}/interfaces/{interfaceID}][%d] getVmInteraceBadRequest ", 400)
}

func (o *GetVMInteraceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVMInteraceNotFound creates a GetVMInteraceNotFound with default headers values
func NewGetVMInteraceNotFound() *GetVMInteraceNotFound {
	return &GetVMInteraceNotFound{}
}

/*GetVMInteraceNotFound handles this case with default header values.

VM not found
*/
type GetVMInteraceNotFound struct {
}

func (o *GetVMInteraceNotFound) Error() string {
	return fmt.Sprintf("[GET /vms/{vmID}/interfaces/{interfaceID}][%d] getVmInteraceNotFound ", 404)
}

func (o *GetVMInteraceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVMInteraceDefault creates a GetVMInteraceDefault with default headers values
func NewGetVMInteraceDefault(code int) *GetVMInteraceDefault {
	return &GetVMInteraceDefault{
		_statusCode: code,
	}
}

/*GetVMInteraceDefault handles this case with default header values.

unexpected error
*/
type GetVMInteraceDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get VM interace default response
func (o *GetVMInteraceDefault) Code() int {
	return o._statusCode
}

func (o *GetVMInteraceDefault) Error() string {
	return fmt.Sprintf("[GET /vms/{vmID}/interfaces/{interfaceID}][%d] getVMInterace default  %+v", o._statusCode, o.Payload)
}

func (o *GetVMInteraceDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVMInteraceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
