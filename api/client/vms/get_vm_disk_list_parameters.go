// Code generated by go-swagger; DO NOT EDIT.

package vms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetVMDiskListParams creates a new GetVMDiskListParams object
// with the default values initialized.
func NewGetVMDiskListParams() *GetVMDiskListParams {
	var (
		limitDefault = int32(20)
		skipDefault  = int32(0)
	)
	return &GetVMDiskListParams{
		Limit: &limitDefault,
		Skip:  &skipDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetVMDiskListParamsWithTimeout creates a new GetVMDiskListParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetVMDiskListParamsWithTimeout(timeout time.Duration) *GetVMDiskListParams {
	var (
		limitDefault = int32(20)
		skipDefault  = int32(0)
	)
	return &GetVMDiskListParams{
		Limit: &limitDefault,
		Skip:  &skipDefault,

		timeout: timeout,
	}
}

// NewGetVMDiskListParamsWithContext creates a new GetVMDiskListParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetVMDiskListParamsWithContext(ctx context.Context) *GetVMDiskListParams {
	var (
		limitDefault = int32(20)
		skipDefault  = int32(0)
	)
	return &GetVMDiskListParams{
		Limit: &limitDefault,
		Skip:  &skipDefault,

		Context: ctx,
	}
}

// NewGetVMDiskListParamsWithHTTPClient creates a new GetVMDiskListParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetVMDiskListParamsWithHTTPClient(client *http.Client) *GetVMDiskListParams {
	var (
		limitDefault = int32(20)
		skipDefault  = int32(0)
	)
	return &GetVMDiskListParams{
		Limit:      &limitDefault,
		Skip:       &skipDefault,
		HTTPClient: client,
	}
}

/*GetVMDiskListParams contains all the parameters to send to the API endpoint
for the get VM disk list operation typically these are written to a http.Request
*/
type GetVMDiskListParams struct {

	/*Limit*/
	Limit *int32
	/*Skip*/
	Skip *int32
	/*VMID
	  ID of VM to use

	*/
	VMID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get VM disk list params
func (o *GetVMDiskListParams) WithTimeout(timeout time.Duration) *GetVMDiskListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get VM disk list params
func (o *GetVMDiskListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get VM disk list params
func (o *GetVMDiskListParams) WithContext(ctx context.Context) *GetVMDiskListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get VM disk list params
func (o *GetVMDiskListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get VM disk list params
func (o *GetVMDiskListParams) WithHTTPClient(client *http.Client) *GetVMDiskListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get VM disk list params
func (o *GetVMDiskListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLimit adds the limit to the get VM disk list params
func (o *GetVMDiskListParams) WithLimit(limit *int32) *GetVMDiskListParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get VM disk list params
func (o *GetVMDiskListParams) SetLimit(limit *int32) {
	o.Limit = limit
}

// WithSkip adds the skip to the get VM disk list params
func (o *GetVMDiskListParams) WithSkip(skip *int32) *GetVMDiskListParams {
	o.SetSkip(skip)
	return o
}

// SetSkip adds the skip to the get VM disk list params
func (o *GetVMDiskListParams) SetSkip(skip *int32) {
	o.Skip = skip
}

// WithVMID adds the vMID to the get VM disk list params
func (o *GetVMDiskListParams) WithVMID(vMID string) *GetVMDiskListParams {
	o.SetVMID(vMID)
	return o
}

// SetVMID adds the vmId to the get VM disk list params
func (o *GetVMDiskListParams) SetVMID(vMID string) {
	o.VMID = vMID
}

// WriteToRequest writes these params to a swagger request
func (o *GetVMDiskListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Limit != nil {

		// query param limit
		var qrLimit int32
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt32(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.Skip != nil {

		// query param skip
		var qrSkip int32
		if o.Skip != nil {
			qrSkip = *o.Skip
		}
		qSkip := swag.FormatInt32(qrSkip)
		if qSkip != "" {
			if err := r.SetQueryParam("skip", qSkip); err != nil {
				return err
			}
		}

	}

	// path param vmID
	if err := r.SetPathParam("vmID", o.VMID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
