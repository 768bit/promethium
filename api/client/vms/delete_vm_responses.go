// Code generated by go-swagger; DO NOT EDIT.

package vms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/768bit/promethium/api/models"
)

// DeleteVMReader is a Reader for the DeleteVM structure.
type DeleteVMReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVMReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteVMOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteVMBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteVMNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteVMOK creates a DeleteVMOK with default headers values
func NewDeleteVMOK() *DeleteVMOK {
	return &DeleteVMOK{}
}

/*DeleteVMOK handles this case with default header values.

successful operation
*/
type DeleteVMOK struct {
	Payload *models.Item
}

func (o *DeleteVMOK) Error() string {
	return fmt.Sprintf("[DELETE /vms/{vmID}][%d] deleteVmOK  %+v", 200, o.Payload)
}

func (o *DeleteVMOK) GetPayload() *models.Item {
	return o.Payload
}

func (o *DeleteVMOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Item)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVMBadRequest creates a DeleteVMBadRequest with default headers values
func NewDeleteVMBadRequest() *DeleteVMBadRequest {
	return &DeleteVMBadRequest{}
}

/*DeleteVMBadRequest handles this case with default header values.

Invalid ID supplied
*/
type DeleteVMBadRequest struct {
}

func (o *DeleteVMBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /vms/{vmID}][%d] deleteVmBadRequest ", 400)
}

func (o *DeleteVMBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVMNotFound creates a DeleteVMNotFound with default headers values
func NewDeleteVMNotFound() *DeleteVMNotFound {
	return &DeleteVMNotFound{}
}

/*DeleteVMNotFound handles this case with default header values.

VM not found
*/
type DeleteVMNotFound struct {
}

func (o *DeleteVMNotFound) Error() string {
	return fmt.Sprintf("[DELETE /vms/{vmID}][%d] deleteVmNotFound ", 404)
}

func (o *DeleteVMNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
