// Code generated by go-swagger; DO NOT EDIT.

package vms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/768bit/promethium/api/models"
)

// GetVMDiskListReader is a Reader for the GetVMDiskList structure.
type GetVMDiskListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVMDiskListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVMDiskListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetVMDiskListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetVMDiskListOK creates a GetVMDiskListOK with default headers values
func NewGetVMDiskListOK() *GetVMDiskListOK {
	return &GetVMDiskListOK{}
}

/*GetVMDiskListOK handles this case with default header values.

Array of Disks
*/
type GetVMDiskListOK struct {
	Payload []*models.VMDisk
}

func (o *GetVMDiskListOK) Error() string {
	return fmt.Sprintf("[GET /vms/{vmID}/disks][%d] getVmDiskListOK  %+v", 200, o.Payload)
}

func (o *GetVMDiskListOK) GetPayload() []*models.VMDisk {
	return o.Payload
}

func (o *GetVMDiskListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMDiskListDefault creates a GetVMDiskListDefault with default headers values
func NewGetVMDiskListDefault(code int) *GetVMDiskListDefault {
	return &GetVMDiskListDefault{
		_statusCode: code,
	}
}

/*GetVMDiskListDefault handles this case with default header values.

unexpected error
*/
type GetVMDiskListDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get VM disk list default response
func (o *GetVMDiskListDefault) Code() int {
	return o._statusCode
}

func (o *GetVMDiskListDefault) Error() string {
	return fmt.Sprintf("[GET /vms/{vmID}/disks][%d] getVMDiskList default  %+v", o._statusCode, o.Payload)
}

func (o *GetVMDiskListDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVMDiskListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
