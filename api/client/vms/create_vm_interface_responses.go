// Code generated by go-swagger; DO NOT EDIT.

package vms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/768bit/promethium/api/models"
)

// CreateVMInterfaceReader is a Reader for the CreateVMInterface structure.
type CreateVMInterfaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateVMInterfaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateVMInterfaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateVMInterfaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateVMInterfaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateVMInterfaceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateVMInterfaceOK creates a CreateVMInterfaceOK with default headers values
func NewCreateVMInterfaceOK() *CreateVMInterfaceOK {
	return &CreateVMInterfaceOK{}
}

/*CreateVMInterfaceOK handles this case with default header values.

successful operation
*/
type CreateVMInterfaceOK struct {
	Payload *models.MetaDataNetworkInterfaceConfig
}

func (o *CreateVMInterfaceOK) Error() string {
	return fmt.Sprintf("[POST /vms/{vmID}/interfaces][%d] createVmInterfaceOK  %+v", 200, o.Payload)
}

func (o *CreateVMInterfaceOK) GetPayload() *models.MetaDataNetworkInterfaceConfig {
	return o.Payload
}

func (o *CreateVMInterfaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetaDataNetworkInterfaceConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVMInterfaceBadRequest creates a CreateVMInterfaceBadRequest with default headers values
func NewCreateVMInterfaceBadRequest() *CreateVMInterfaceBadRequest {
	return &CreateVMInterfaceBadRequest{}
}

/*CreateVMInterfaceBadRequest handles this case with default header values.

Invalid ID supplied
*/
type CreateVMInterfaceBadRequest struct {
}

func (o *CreateVMInterfaceBadRequest) Error() string {
	return fmt.Sprintf("[POST /vms/{vmID}/interfaces][%d] createVmInterfaceBadRequest ", 400)
}

func (o *CreateVMInterfaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateVMInterfaceNotFound creates a CreateVMInterfaceNotFound with default headers values
func NewCreateVMInterfaceNotFound() *CreateVMInterfaceNotFound {
	return &CreateVMInterfaceNotFound{}
}

/*CreateVMInterfaceNotFound handles this case with default header values.

VM not found
*/
type CreateVMInterfaceNotFound struct {
}

func (o *CreateVMInterfaceNotFound) Error() string {
	return fmt.Sprintf("[POST /vms/{vmID}/interfaces][%d] createVmInterfaceNotFound ", 404)
}

func (o *CreateVMInterfaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateVMInterfaceDefault creates a CreateVMInterfaceDefault with default headers values
func NewCreateVMInterfaceDefault(code int) *CreateVMInterfaceDefault {
	return &CreateVMInterfaceDefault{
		_statusCode: code,
	}
}

/*CreateVMInterfaceDefault handles this case with default header values.

unexpected error
*/
type CreateVMInterfaceDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the create VM interface default response
func (o *CreateVMInterfaceDefault) Code() int {
	return o._statusCode
}

func (o *CreateVMInterfaceDefault) Error() string {
	return fmt.Sprintf("[POST /vms/{vmID}/interfaces][%d] createVMInterface default  %+v", o._statusCode, o.Payload)
}

func (o *CreateVMInterfaceDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateVMInterfaceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
