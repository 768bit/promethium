// Code generated by go-swagger; DO NOT EDIT.

package vms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/768bit/promethium/api/models"
)

// ResetVMReader is a Reader for the ResetVM structure.
type ResetVMReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResetVMReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewResetVMOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewResetVMBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewResetVMNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewResetVMOK creates a ResetVMOK with default headers values
func NewResetVMOK() *ResetVMOK {
	return &ResetVMOK{}
}

/*ResetVMOK handles this case with default header values.

successful operation
*/
type ResetVMOK struct {
	Payload *models.VM
}

func (o *ResetVMOK) Error() string {
	return fmt.Sprintf("[GET /vms/{vmID}/reset][%d] resetVmOK  %+v", 200, o.Payload)
}

func (o *ResetVMOK) GetPayload() *models.VM {
	return o.Payload
}

func (o *ResetVMOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VM)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResetVMBadRequest creates a ResetVMBadRequest with default headers values
func NewResetVMBadRequest() *ResetVMBadRequest {
	return &ResetVMBadRequest{}
}

/*ResetVMBadRequest handles this case with default header values.

Invalid ID supplied
*/
type ResetVMBadRequest struct {
}

func (o *ResetVMBadRequest) Error() string {
	return fmt.Sprintf("[GET /vms/{vmID}/reset][%d] resetVmBadRequest ", 400)
}

func (o *ResetVMBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetVMNotFound creates a ResetVMNotFound with default headers values
func NewResetVMNotFound() *ResetVMNotFound {
	return &ResetVMNotFound{}
}

/*ResetVMNotFound handles this case with default header values.

VM not found
*/
type ResetVMNotFound struct {
}

func (o *ResetVMNotFound) Error() string {
	return fmt.Sprintf("[GET /vms/{vmID}/reset][%d] resetVmNotFound ", 404)
}

func (o *ResetVMNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
