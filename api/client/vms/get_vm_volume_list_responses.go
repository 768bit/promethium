// Code generated by go-swagger; DO NOT EDIT.

package vms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/768bit/promethium/api/models"
)

// GetVMVolumeListReader is a Reader for the GetVMVolumeList structure.
type GetVMVolumeListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVMVolumeListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVMVolumeListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetVMVolumeListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetVMVolumeListOK creates a GetVMVolumeListOK with default headers values
func NewGetVMVolumeListOK() *GetVMVolumeListOK {
	return &GetVMVolumeListOK{}
}

/*GetVMVolumeListOK handles this case with default header values.

Array of VM Volumes
*/
type GetVMVolumeListOK struct {
	Payload []*models.VMVolume
}

func (o *GetVMVolumeListOK) Error() string {
	return fmt.Sprintf("[GET /vms/{vmID}/volumes][%d] getVmVolumeListOK  %+v", 200, o.Payload)
}

func (o *GetVMVolumeListOK) GetPayload() []*models.VMVolume {
	return o.Payload
}

func (o *GetVMVolumeListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVMVolumeListDefault creates a GetVMVolumeListDefault with default headers values
func NewGetVMVolumeListDefault(code int) *GetVMVolumeListDefault {
	return &GetVMVolumeListDefault{
		_statusCode: code,
	}
}

/*GetVMVolumeListDefault handles this case with default header values.

unexpected error
*/
type GetVMVolumeListDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get VM volume list default response
func (o *GetVMVolumeListDefault) Code() int {
	return o._statusCode
}

func (o *GetVMVolumeListDefault) Error() string {
	return fmt.Sprintf("[GET /vms/{vmID}/volumes][%d] getVMVolumeList default  %+v", o._statusCode, o.Payload)
}

func (o *GetVMVolumeListDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVMVolumeListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
