/*
 * Promethium Daemon API
 *
 * API for Promethium Daemon
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package api

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/768bit/promethium/lib/vmm"

	"github.com/gorilla/mux"
)

var VmmMgr *vmm.VmmManager

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter(vmmMgr *vmm.VmmManager) *mux.Router {
	VmmMgr = vmmMgr
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"CreateVM",
		strings.ToUpper("Post"),
		"/vms",
		CreateVM,
	},

	Route{
		"CreateVMDrive",
		strings.ToUpper("Post"),
		"/vms/{vmID}/drives",
		CreateVMDrive,
	},

	Route{
		"CreateVMInterface",
		strings.ToUpper("Post"),
		"/vms/{vmID}/interfaces",
		CreateVMInterface,
	},

	Route{
		"CreateVMVolume",
		strings.ToUpper("Post"),
		"/vms/{vmID}/volumes",
		CreateVMVolume,
	},

	Route{
		"DeleteVM",
		strings.ToUpper("Delete"),
		"/vms/{vmID}",
		DeleteVM,
	},

	Route{
		"DeleteVMDrive",
		strings.ToUpper("Delete"),
		"/vms/{vmID}/drives/{driveID}",
		DeleteVMDrive,
	},

	Route{
		"DeleteVMInterface",
		strings.ToUpper("Delete"),
		"/vms/{vmID}/interfaces/{interfaceID}",
		DeleteVMInterface,
	},

	Route{
		"DeleteVMVolume",
		strings.ToUpper("Delete"),
		"/vms/{vmID}/volumes/{volumeID}",
		DeleteVMVolume,
	},

	Route{
		"GetVM",
		strings.ToUpper("Get"),
		"/vms/{vmID}",
		GetVM,
	},

	Route{
		"GetVMDrive",
		strings.ToUpper("Get"),
		"/vms/{vmID}/drives/{driveID}",
		GetVMDrive,
	},

	Route{
		"GetVMDriveList",
		strings.ToUpper("Get"),
		"/vms/{vmID}/drives",
		GetVMDriveList,
	},

	Route{
		"GetVMInterace",
		strings.ToUpper("Get"),
		"/vms/{vmID}/interfaces/{interfaceID}",
		GetVMInterace,
	},

	Route{
		"GetVMInterfaceList",
		strings.ToUpper("Get"),
		"/vms/{vmID}/interfaces",
		GetVMInterfaceList,
	},

	Route{
		"GetVMList",
		strings.ToUpper("Get"),
		"/vms",
		GetVMList,
	},

	Route{
		"GetVMVolume",
		strings.ToUpper("Get"),
		"/vms/{vmID}/volumes/{volumeID}",
		GetVMVolume,
	},

	Route{
		"GetVMVolumeList",
		strings.ToUpper("Get"),
		"/vms/{vmID}/volumes",
		GetVMVolumeList,
	},

	Route{
		"UpdateVM",
		strings.ToUpper("Put"),
		"/vms/{vmID}",
		UpdateVM,
	},

	Route{
		"UpdateVMDrive",
		strings.ToUpper("Put"),
		"/vms/{vmID}/drives/{driveID}",
		UpdateVMDrive,
	},

	Route{
		"UpdateVMInterface",
		strings.ToUpper("Put"),
		"/vms/{vmID}/interfaces/{interfaceID}",
		UpdateVMInterface,
	},

	Route{
		"UpdateVMVolume",
		strings.ToUpper("Put"),
		"/vms/{vmID}/volumes/{volumeID}",
		UpdateVMVolume,
	},
}
